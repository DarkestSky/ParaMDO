import type { AxiosRequestConfig, Method } from 'axios';

import { message as $message } from 'antd';
import axios from 'axios';

export const BASE_URL = 'http://172.19.30.28:8080';

const axiosInstance = axios.create({
  baseURL: BASE_URL,
  timeout: 6000,
  withCredentials: true,
  headers: {
    AccessControlAllowOrigin: '*',
    AccessControlAllowCredentials: true,
  },
});

axiosInstance.interceptors.request.use(
  config => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.token = `${token}`;
    }
    return config;
  },
  error => {
    Promise.reject(error);
  },
);

axiosInstance.interceptors.response.use(
  config => {
    if (config?.data?.message) {
      // $message.success(config.data.message)
    }

    return config?.data;
  },
  error => {
    // if needs to navigate to login page when request exception
    // history.replace('/login');
    let errorMessage = '系统异常';

    if (error?.message?.includes('Network Error')) {
      errorMessage = '网络错误，请检查您的网络';
    } else {
      errorMessage = error?.message;
    }

    console.dir(error);
    error.message && $message.error(errorMessage);

    return {
      errno: 0,
      message: errorMessage,
      data: null,
    };
  },
);

export type Response<T = unknown> = {
  code?: number;
  msg?: string;
  data: T;
};

/**
 *
 * @param method - request methods
 * @param url - request url
 * @param data - request data or params
 */
export const request = <T = unknown>(
  method: Lowercase<Method>,
  url: string,
  data?: unknown,
  config?: AxiosRequestConfig,
): Promise<Response<T | void>> => {
  const prefix = '';
  url = prefix + url;
  if (method === 'post') {
    return axiosInstance.post(url, data, config);
  } else if (method === 'put') {
    return axiosInstance.put(url, data, config);
  } else if (method === 'get') {
    return axiosInstance.get(url, {
      params: data,
      ...config,
    });
  } else if (method === 'delete') {
    return axiosInstance.delete(url, {
      params: data,
      ...config,
    });
  } else {
    return axiosInstance.post(url, data, config);
  }
};
